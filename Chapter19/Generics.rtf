{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red34\green45\blue53;\red35\green255\blue6;}
{\*\expandedcolortbl;;\cssrgb\c17647\c23137\c27059;\cssrgb\c0\c100000\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
(
\f1\i Sort the points in a plane
\f0\i0 ) Write a program that meets the following requirements:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Define a class named \cf3 Point\cf2  with tow data fields\'a0
\f1\i \cf3 x
\f0\i0  \cf2 and\'a0
\f1\i \cf3 y\'a0
\f0\i0 \cf2 to represent a point's\'a0
\f1\i x
\f0\i0 - and\'a0
\f1\i y
\f0\i0 -coordinates. Implement the \cf3 Comparable\cf2  interface for the comparing the points on\'a0
\f1\i x
\f0\i0 -coordinates. If two points have the same\'a0
\f1\i x
\f0\i0 -coordinates, compare their\'a0
\f1\i y-
\f0\i0 coordinates.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Define a class named \cf3 CompareY\cf2  that implements \cf3 Comparator<Point>\cf2 . Implement the \cf3 compare\cf2  method to compare two points on their\'a0
\f1\i y
\f0\i0 -coordinates. If two points have the same\'a0
\f1\i y
\f0\i0 -coordinates, compare their\'a0
\f1\i x
\f0\i0 -coordinates.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Randomly create \cf3 100\cf2  points and apply the \cf3 Arrays.sort\cf2  method to display the points in increasing order of their\'a0
\f1\i x-
\f0\i0 coordinates, and increasing order of their\'a0
\f1\i y
\f0\i0 -coordinates, respectively.}